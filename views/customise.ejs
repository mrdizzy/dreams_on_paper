<!doctype html>
<html>
  <head>
	
		<link rel="stylesheet" href="/stylesheets/reset.css" />       
    <link rel="stylesheet" href="/stylesheets/stylesheet.css" />   
		
		<script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.1/underscore-min.js"></script>    
		<script src="http://code.jquery.com/jquery-latest.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.2/backbone-min.js"></script>
		<script>
			_.templateSettings = {
			interpolate: /\{\{=(.+?)\}\}/g,
			evaluate: /\{\{(.+?)\}\}/g
			};
		</script>
		
  </head>
	
  <body>

	<% include partials/printer_alert_box %>	
	<% include partials/control_panel %>
  <% include partials/invitation_front %>
  <% include partials/form %>

<!-- FORM JAVASCRIPT TEMPLATE -->

<script type="text/template" id="invitation_form">
  <form><input type="text" name="monogram_name"></form>
</script>



<!-- INVTATION BACK JAVASCRIPT TEMPLATE -->

	<script type="text/template"></script>
	
<!-- USER INTERFACE DISPLAY -->

<div style="overflow:hidden" id="ui_container">
  <div id="ui_area"> 
    <div id="invitation_front_preview"></div>		
		<div class="A6_container">
			<div id="form_container"></div>
		</div>
		<div class="invitation_back A6_container">
			<img src="/invite/simplicity_front.svg" class="invitation_image" />	
			<div class="second_monogram" style="margin-top:35mm;"></div>
			<div style="padding-top:30mm;margin:0 auto;text-align:center;font:normal 1em 'TP';letter-spacing:0.2em">&middot;Invitation&middot;</div>
		</div>
  </div>
</div>






<!-- PRINTABLE AREA -->


<div id="printable_area"></div>

<script>

var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

function determine_date_subscript(number) {
	if (number == 1 || number == 21 || number == 31) {
		return "st";
	} else if (number == 2 || number == 22) {
		return "nd"
	} else if (number == 3 || number == 23) {
		return "rd"
	} else {
		return "th"
	}
}

// Scale the ui_area so that it looks nice on the screen
var vw = $('html').width();
var height_of_ui_container = (1.4142857142857142857142857142857 * vw)
$('#ui_container').css("height",height_of_ui_container + 75)

var transform_value = vw / 794 // 794 is the width of an A4 page in pixels

$('#ui_area').css("transform", "scale(" + transform_value + ")")
$('#ui_area').css("transform-origin", "top left")


var Detail = Backbone.Model.extend({
  defaults: {
		monogram_bride: "Anna",
		monogram_groom: "David", 	
		groom_fullname: "Jonathan Henry Griffiths",
		bride_fullname: "Anna Eleanor Martin",
		wedding_day: 31,
		wedding_month: 05,
		wedding_year: 2015,
		venue: "Appuldurcombe House", 
		location: "Winchester",		
		beforetext: ["Together with their parents"],
		middletext: [ "Are getting married", "and request the pleasure of the company of"],
	  rsvp_day: 05,
		rsvp_month: 03,
		rsvp_year: 2015,
		rsvp_address: "32 Middlewood Rd, Brigton, me3 21b",
		rsvp_email: "david.pettifer@dizzy.co.uk",
		rsvp_phone: "07814 752865",
		maintext: [ "on the occasion of their marriage", "to take place at", "The Ravensworth Hotel, Lamesley, Winchester", "on Saturday 17th June 2012 at 1.30pm", "Followed by a Reception at Lakeside Manor Park"],
		ebay_id: <%= ebay_id %>
	}
})

<% if (order) { %>
var detail = new Detail(<%- JSON.stringify(order) %>);
<% } else { %>
var detail = new Detail();
<% } %>

function Valign() {
	var container_height = $('.valign_container').first().height();
	var total_height_of_elements = 0;
	var counter = 1;
	$('.valign_container').first().find('.foralign').each(function(index) {
		counter = counter + 1;
		total_height_of_elements = total_height_of_elements + $(this).height();
	})

	var remainder = container_height - total_height_of_elements;
	var padding = remainder / counter;
	padding = padding / 2;
	$('.valign_container').first().find('.foralign').each(function(index) {
	 $(this).css("padding-top", padding).css("padding-bottom", padding)
	})
}

var InvitationFrontView = Backbone.View.extend({
	el: '#invitation_front_preview',
	initialize: function() {
		this.listenTo(this.model, 'change', this.render)
		this.listenTo(this.model, 'change:maintext', this.render)
		this.listenTo(this.model, 'change:beforetext', this.render)
		this.listenTo(this.model, 'change:middletext', this.render)
	},
	render: function() {
	  var compiled_template = _.template($('#invitation_front_template').html());
		var pretty = this.model.toJSON();
		var pretty_monogram_month = months[this.model.get("wedding_month") - 1]
		pretty.pretty_monogram_month = pretty_monogram_month;
		
		var date_subscript = determine_date_subscript(this.model.get("wedding_day"));
		pretty.pretty_date_subscript = date_subscript
		
	  var html =compiled_template(pretty)
		this.$el.html(html);
		Valign();
		return this;
	}
})

var iv = new InvitationFrontView({model: detail});
iv.render();

// Must wait until images are loaded first otherwise script will miscalculate the heights of elements as the images will not have caused the elements to expand.
  $(window).bind("load", function() {
	// Formula to vertically align a list of elements:
	// ((height_of_page - (height of page - total of all elements height)) / (number_of_elements + 1))
	// 

////
////   FORM
var InvitationForm = Backbone.View.extend({
  tagName: "form",
	attributes: { "method": "POST", "action": "/sendform"},
	initialize: function() {
		this.listenTo(this.model, "change:maintext", this.renderMainText)
		this.listenTo(this.model, "change:beforetext", this.renderBeforeText)
				this.listenTo(this.model, "change:middletext", this.renderMiddleText)
	},
	renderMainText: function() {
		this.renderMultipleText("maintext")
	},
	renderBeforeText: function(){
		this.renderMultipleText("beforetext")
	},
	renderMIddleText: function(){
		this.renderMultipleText("middletext")
	},
	renderMultipleText: function(field) {
		  var $maintext = this.$('#' + field + '_container')
			$maintext.empty();
				var lines = this.model.get(field)
				var counter = 0;
				lines.forEach(function(line) {
					var $label = $('<label for="' + field + counter + '">Line ' + counter + '</label><br/>')
					var $field = $('<input type="text" value="' + line + '" name="' + field + counter+ '" size="50" data-field="' + field + '" data-counter="' + counter + '"></input><img src="/gfx/icons/delete.svg" style="width:13px;" data-delete="' + counter + '" data-field_type="' + field + '" class="delete"><br/>"')

					$maintext.append($label).append($field)
					if (counter == (lines.length - 1)) {
						$maintext.append('<div class="add" style="cursor:pointer;width:150px;padding:10px;text-align:center;border-radius:8px;font:normal 1em OS Light" data-field_type="' + field + '"><img src="/gfx/icons/add.svg" style="vertical-align:middle;width:15px;"> ADD ANOTHER LINE</span><br/>')
					}
					counter = counter + 1;
				})
	},
	events: {
		'blur input': 'update',
		'click .add': 'addToText',
		'click .delete': 'deleteText',
		'change select': 'selectChanged'
	},
	deleteText: function(e) {	 
		var $field = $(e.currentTarget);
		 var field_type = $field.data("field_type")
		var index = $field.data("delete")
		var ary = this.model.get(field_type);
		ary.splice(index,1)
		console.log(ary)
		this.model.set(field_type, ary).trigger("change:" + field_type)
	},
	addToText: function(e) {
		 var $field = $(e.currentTarget);
		 var field_type = $field.data("field_type")

	var ary = this.model.get(field_type);
		ary.push("");
		this.model.set(field_type, ary).trigger("change:" + field_type)
	},
	selectChanged: function(e) {
		var $field = $(e.currentTarget);
		var value = $field.val();
		var id = $field.data("field")
	  this.model.set(id, value)		
	},
	update: function(e) {
	  var $field = $(e.currentTarget);
		var value = $field.val();
    var id = $field.data("field")
		if (id == "maintext" || id == "beforetext") {
      var ary = this.model.get(id);
      ary[$field.data("counter")] = value;
			this.model.set(id, ary).trigger("change")
		} else {	
		  this.model.set(id, value)
		}
	},
	render: function() {
	   var compiled_template = _.template($('#form_template').html());
     var html =compiled_template(detail.toJSON())
		this.$el.html(html);
		return this;
	}
})

var invitation_form = new InvitationForm({model:detail});
$('#form_container').html(invitation_form.render().$el);

Valign();

// Copy monogram to front design
$('#original_monogram').clone().appendTo('.second_monogram');

//var $front = $('.invitation_front').clone();
//$front.appendTo('#printable_area');
//var $back = $('.invitation_back').clone();
//$back.appendTo('#printable_area')	

//var $printable_area = $('#printable_area').clone()
  // $('#printable_area') is the equivalent of an A4 page width 
	// therefore we need to find the value of the viewport and scale it
	// up or down by a percentage to make it the same size as the viewport
	// We use  the transform_value as the percentage.
//$('#ui_area').html($printable_area.html())


$('#folded_invite').click(function() {
  $front = $('#ui_area .invitation_front')[0];
  $front = $($front);
	$back = $('#ui_area .invitation_back')[0];
	$back = $($back);
  $('#folded_invite').addClass("selected")
	$('#flat_invite').removeClass("selected")
  $('#printable_area').html($front.clone().css({float: "right", clear: "both"}));
	$('#printable_area').append($front.clone().css({float:"right", clear: "both"}));
	$('#printable_area').append($back.clone().css({float: "right", clear: "both"}));
	$('#printable_area').append($back.clone().css({float:"right", clear: "none"}))
})

$('#flat_invite').click(function() {
  $front = $('#ui_area .invitation_front')[0];
	$front = $($front);
	$back = $('#ui_area .invitation_back')[0];
	$back = $($back);
	$('#folded_invite').removeClass("selected")
	$('#flat_invite').addClass("selected")
	$('#printable_area').html($front.clone().css({float: "left", clear: "none"}));
	$('#printable_area').append($back.clone().css({float: "left", clear: "none"}));
	$('#printable_area').append($front.clone().css({float: "left", clear: "none"}));
	$('#printable_area').append($back.clone().css({float: "left", clear: "none"}));
})

 $('#printer_icon').click(function() {
 	  $('#ui_print_alert').fadeIn();
 })
 
 $('#print_now').click(function() {
  	$('#ui_print_alert').hide();
	  window.print();
 })
 
 $('.close').click(function() {
   $('#ui_print_alert').fadeOut();
 })
 
 })
	 
</script>

</body>

</html>